<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shinhan.walfi.mapper.BankMapper">

    <select id="testLoadData" resultType="com.shinhan.walfi.dto.TestEntityDTO">
        select id, 한글칼럼영어데이터, 한글칼럼한글데이터, eng_column_eng_data, eng_column_kor_data from test_entity
    </select>

    <insert id="testAddData">
        insert into test_entity (id, 한글칼럼영어데이터, 한글칼럼한글데이터, eng_column_eng_data, eng_column_kor_data)
        values (1, 'english', '한글데이터', 'english_data', '한글데이터')
    </insert>

    <select id="findMainAccountNumber" resultType="boolean" parameterType="String">
        SELECT CASE
                   WHEN count(*) != 0 THEN TRUE
                   ELSE FALSE
                   END AS `count`
        FROM account a
        WHERE `대표계좌` = #{mainWithdrawalAccountNumber}
          AND  `상품명` = '저축예금';
    </select>

    <select id="findSubAccountNumberByCurrencyCode" resultType="String" parameterType="String">
        SELECT a.계좌번호
        FROM account a
        WHERE `대표계좌` = #{mainWithdrawalAccountNumber}
          AND `통화` = #{currencyCode}
          AND  `상품명` = '저축예금';
    </select>

    <select id="checkSufficientMoneyForTransfer" resultType="boolean" parameterType="Map">
        SELECT CASE
                   WHEN a.`잔액(원화)` >= #{transferMoney} THEN TRUE
                   ELSE FALSE
                   END AS `result`
        FROM account a
        WHERE `계좌번호` = #{subAccountNumber};
    </select>

    <select id="withdrawTransferMoneyFromAccount" resultType="int" parameterType="Map">
        UPDATE account
        SET `잔액(통화별)`     = `잔액(통화별)` - #{transferMoney},
            `평가금액(통화별)` = `평가금액(통화별)` - #{transferMoney},
            `잔액(원화)`       = @result := `잔액(원화)` - #{transferMoney},
            `평가금액(원화)`   = `평가금액(원화)` - #{transferMoney}
        WHERE `계좌번호` = #{accountNumber};

        select @result;
    </select>

    <select id="depositTransferMoneyFromAccount" resultType="int" parameterType="Map">
        UPDATE account
        SET `잔액(통화별)`     = `잔액(통화별)` + #{transferMoney},
            `평가금액(통화별)` = `평가금액(통화별)` + #{transferMoney},
            `잔액(원화)`       = @result := `잔액(원화)` + #{transferMoney},
            `평가금액(원화)`   = `평가금액(원화)` + #{transferMoney}
        WHERE `계좌번호` = #{accountNumber};

        select @result;
    </select>

    <insert id="saveAccountTransaction" parameterType="com.shinhan.walfi.dto.transfer.KRWTransactionAccountDTO">
        INSERT INTO krw_account_transaction
            (상대계좌번호, 입금은행코드, 이체종류, 이체금액, 입금계좌통장메모, 출금계좌통장메모, 거래후잔액, 계좌번호)
        VALUES
            (#{상대계좌번호}, #{입금은행코드}, #{이체종류}, #{이체금액}, #{입금계좌통장메모}, #{출금계좌통장메모}, #{거래후잔액}, #{계좌번호})
    </insert>

    <select id="globalDepositTransferMoneyFromAccount" resultType="int" parameterType="Map">
        UPDATE account
        SET `잔액(통화별)`     = `잔액(통화별)` + #{transferMoney},
            `평가금액(통화별)` = `평가금액(통화별)` + #{transferMoney},
            `잔액(원화)`       = @result := `잔액(원화)` + #{krwConvertedMoney},
            `평가금액(원화)`   = `평가금액(원화)` + #{krwConvertedMoney}
        WHERE `계좌번호` = #{accountNumber};

        select @result;
    </select>

    <select id="globalWithdrawTransferMoneyFromAccount" resultType="int" parameterType="Map">
        UPDATE account
        SET `잔액(통화별)`     = `잔액(통화별)` - #{transferMoney},
            `평가금액(통화별)` = `평가금액(통화별)` - #{transferMoney},
            `잔액(원화)`       = @result := `잔액(원화)` - #{krwConvertedMoney},
            `평가금액(원화)`   = `평가금액(원화)` - #{krwConvertedMoney}
        WHERE `계좌번호` = #{accountNumber};

        select @result;
    </select>

</mapper>
